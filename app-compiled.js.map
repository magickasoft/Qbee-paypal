{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AACpB,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACxC,IAAI,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACvC,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACvC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;;AAE3B,IAAI,OAAO,GAAG;AACV,8BAA0B,EAAG,SAAS,CAAC,MAAM;AAC7C,gCAA4B,EAAE,SAAS,CAAC,QAAQ;AAChD,iCAA6B,EAAE,SAAS,CAAC,SAAS;AAClD,kCAA8B,EAAE,MAAM;AACtC,mCAA+B,EAAE,MAAM;AACvC,6BAAyB,EAAE,SAAS,CAAC,KAAK;CAC7C,CAAC;;AAEF,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACvB,OAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAA;CACtC,CAAC,CAAC;;AAEH,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,UAAC,GAAG,EAAE,GAAG,EAAM;AACtC,QAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;AACzC,QAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;AAC5B,UAAM,GAAG,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAChC,QAAI,IAAI,GAAG;AACP,oBAAY,EAAC,aAAa;AAC1B,uBAAe,EAAE;AACb,2BAAe,EAAE,SAAS,CAAC,KAAK;AAChC,uBAAW,EAAE,WAAW;SAC3B;AACD,sBAAc,EAAC,KAAK;AACpB,mBAAW,EAAE,cAAc;AAC3B,sBAAc,EAAE;AACZ,sBAAU,EAAE,CACR;AACI,sBAAM,EAAN,MAAM;AACN,uBAAO,EAAE,4BAA4B;AACrC,yBAAS,EAAE,IAAI;aAClB,EACD;AACI,sBAAM,EAAN,MAAM;AACN,qBAAK,EAAL,KAAK;AACL,yBAAS,EAAE,KAAK;aACnB,CACJ;SACJ;AACD,mBAAW,EAAE,mBAAmB;AAChC,mBAAW,EAAE,mBAAmB;AAChC,yBAAiB,EAAE;AACf,2BAAe,EAAE,OAAO;AACxB,yBAAa,EAAE,WAAW;SAC7B;KACJ,CAAC;AACF,cAAU,CAAC,OAAO,CAAC,sDAAsD,EAAE;AACvE,cAAM,EAAE,MAAM;AACd,YAAI,EAAJ,IAAI;AACJ,eAAO,EAAP,OAAO;KACV,CAAC,CACG,IAAI,CAAC,UAAS,QAAQ,EAAE;AACrB,YAAI,SAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;AACnC,YAAG,SAAS,CAAC,gBAAgB,CAAC,GAAG,KAAK,SAAS,EAAC;AAC5C,eAAG,CAAC,IAAI,CAAC;AACL,uBAAO,EAAE,IAAI;AACb,sBAAM,EAAE,SAAS,CAAC,MAAM;aAC3B,CAAC,CAAA;SACL,MAAM;AACH,eAAG,CAAC,IAAI,CAAC;AACL,uBAAO,EAAE,KAAK;AACd,qBAAK,EAAE,sBAAsB;aAChC,CAAC,CAAC;SACN;KACJ,CAAC,CAAC;CACV,CAAC,CAAC;;AAEH,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACpC,QAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AAC7B,QAAI,IAAI,GAAG;AACP,yBAAiB,EAAC;AACd,2BAAe,EAAE,OAAO;AACxB,yBAAa,EAAE,WAAW;SAC7B;AACD,cAAM,EAAN,MAAM;KACT,CAAC;AACF,cAAU,CAAC,OAAO,CAAC,iEAAiE,EAAE;AAClF,cAAM,EAAE,MAAM;AACd,YAAI,EAAJ,IAAI;AACJ,eAAO,EAAP,OAAO;KACV,CAAC,CACG,IAAI,CAAC,UAAS,QAAQ,EAAE;AACrB,YAAI,SAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;AACnC,YAAG,SAAS,CAAC,gBAAgB,CAAC,GAAG,KAAK,SAAS,EAAC;AAC5C,eAAG,CAAC,IAAI,CAAC;AACL,uBAAO,EAAE,IAAI;AACb,sBAAM,EAAE,SAAS,CAAC,MAAM;aAC3B,CAAC,CAAA;SACL,MAAM;AACH,eAAG,CAAC,IAAI,CAAC;AACL,uBAAO,EAAE,KAAK;AACd,qBAAK,EAAE,6BAA6B;aACvC,CAAC,CAAC;SACN;KACJ,CAAC,CAAC;CACV,CAAC,CAAC;;AAEH,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACxC,QAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AAC7B,QAAI,IAAI,GAAG;AACP,yBAAiB,EAAC;AACd,2BAAe,EAAE,OAAO;AACxB,yBAAa,EAAE,WAAW;SAC7B;AACD,cAAM,EAAN,MAAM;KACT,CAAC;AACF,cAAU,CAAC,OAAO,CAAC,iEAAiE,EAAE;AAClF,cAAM,EAAE,MAAM;AACd,YAAI,EAAJ,IAAI;AACJ,eAAO,EAAP,OAAO;KACV,CAAC,CACG,IAAI,CAAC,UAAS,QAAQ,EAAE;AACrB,YAAI,SAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;AACnC,YAAG,SAAS,CAAC,gBAAgB,CAAC,GAAG,KAAK,SAAS,EAAC;AAC5C,eAAG,CAAC,IAAI,CAAC;AACL,uBAAO,EAAE,IAAI;AACb,sBAAM,EAAE,SAAS,CAAC,iBAAiB;aACtC,CAAC,CAAA;SACL,MAAM;AACH,eAAG,CAAC,IAAI,CAAC;AACL,uBAAO,EAAE,KAAK;AACd,qBAAK,EAAE,6BAA6B;aACvC,CAAC,CAAC;SACN;KACJ,CAAC,CAAC;CACV,CAAC,CAAC;;AAEH,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY;AACzB,WAAO,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;CACvE,CAAC,CAAC","file":"app-compiled.js","sourcesContent":["'use strict';\nvar express = require('express');\nvar app = express();\nvar bodyParser = require('body-parser');\nvar requestify = require('requestify');\nvar constants = require('./constants');\napp.use(bodyParser.json());\n\nvar headers = {\n    \"X-PAYPAL-SECURITY-USERID\" : constants.userId,\n    \"X-PAYPAL-SECURITY-PASSWORD\": constants.password,\n    \"X-PAYPAL-SECURITY-SIGNATURE\": constants.signature,\n    \"X-PAYPAL-REQUEST-DATA-FORMAT\": \"JSON\",\n    \"X-PAYPAL-RESPONSE-DATA-FORMAT\": \"JSON\",\n    \"X-PAYPAL-APPLICATION-ID\": constants.appId\n};\n\napp.get('/', (req, res) => {\n    res.send('Paypal server is online')\n});\n\napp.post('/setup-payment', (req, res ) => {\n    var email = req.body.email.toLowerCase();\n    var amount = req.body.price;\n    amount = \"\" + amount.toFixed(2);\n    var body = {\n        \"actionType\":\"PAY_PRIMARY\",  // Payment action type\n        \"clientDetails\": {\n            \"applicationId\": constants.appId,\n            \"ipAddress\": \"127.0.0.1\"\n        },\n        \"currencyCode\":\"USD\",  // Payment currency code\n        \"feesPayer\": \"EACHRECEIVER\",\n        \"receiverList\": {\n            \"receiver\": [\n                {\n                    amount,  // Payment amount\n                    \"email\": \"qbee-facilitator@gmail.com\", // Payment facilitator email address\n                    \"primary\": true\n                },\n                {\n                    amount,\n                    email,  // Payment Receiver's email address\n                    \"primary\": false\n                }\n            ]\n        },\n        \"returnUrl\": \"http://google.com\",  // Where to redirect the Sender following a successful payment approval\n        \"cancelUrl\": \"http://yandex.com\",  // Where to redirect the Sender following a canceled payment\n        \"requestEnvelope\": {\n            \"errorLanguage\": \"en_US\",  // Language used to display errors\n            \"detailLevel\": \"ReturnAll\"\n        }\n    };\n    requestify.request('https://svcs.sandbox.paypal.com/AdaptivePayments/Pay', {\n        method: 'POST',\n        body,\n        headers\n    })\n        .then(function(response) {\n            var paypalRes = response.getBody();\n            if(paypalRes.responseEnvelope.ack === 'Success'){\n                res.json({\n                    success: true,\n                    payKey: paypalRes.payKey\n                })\n            } else {\n                res.json({\n                    success: false,\n                    error: 'Payment setup failed'\n                });\n            }\n        });\n});\n\napp.post('/check-status', (req, res) => {\n    var payKey = req.body.payKey;\n    var body = {\n        \"requestEnvelope\":{\n            \"errorLanguage\": \"en_US\",\n            \"detailLevel\": \"ReturnAll\"\n        },\n        payKey\n    };\n    requestify.request('https://svcs.sandbox.paypal.com/AdaptivePayments/PaymentDetails', {\n        method: \"POST\",\n        body,\n        headers\n    })\n        .then(function(response) {\n            var paypalRes = response.getBody();\n            if(paypalRes.responseEnvelope.ack === 'Success'){\n                res.json({\n                    success: true,\n                    status: paypalRes.status\n                })\n            } else {\n                res.json({\n                    success: false,\n                    error: 'Payment check status failed'\n                });\n            }\n        });\n});\n\napp.post('/complete-payment', (req, res) => {\n    var payKey = req.body.payKey;\n    var body = {\n        \"requestEnvelope\":{\n            \"errorLanguage\": \"en_US\",\n            \"detailLevel\": \"ReturnAll\"\n        },\n        payKey\n    };\n    requestify.request('https://svcs.sandbox.paypal.com/AdaptivePayments/ExecutePayment', {\n        method: \"POST\",\n        body,\n        headers\n    })\n        .then(function(response) {\n            var paypalRes = response.getBody();\n            if(paypalRes.responseEnvelope.ack === 'Success'){\n                res.json({\n                    success: true,\n                    status: paypalRes.paymentExecStatus\n                })\n            } else {\n                res.json({\n                    success: false,\n                    error: 'Payment check status failed'\n                });\n            }\n        });\n});\n\napp.listen(3000, function () {\n    console.log('Paypal transaction server is listening on port 3000!');\n});"]}